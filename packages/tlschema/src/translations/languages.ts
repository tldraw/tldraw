// This file is automatically generated by internal/scripts/refresh-assets.ts.
// Do not edit manually. Or do, I'm a comment, not a cop.

/**
 * A constant array of supported languages for tldraw localization.
 *
 * Each language object contains a locale identifier (following BCP 47 standards)
 * and a human-readable label in the native language. This array defines all
 * languages that have translation support in tldraw.
 *
 * The array is marked as `const` to ensure type safety and prevent runtime modifications.
 * It's used for building language selection UIs, locale validation, and translation resolution.
 *
 * @example
 * ```ts
 * import { LANGUAGES } from '@tldraw/tlschema'
 *
 * // Build a language selector dropdown
 * const languageOptions = LANGUAGES.map(lang => ({
 *   value: lang.locale,
 *   label: lang.label
 * }))
 *
 * // Check if a locale is supported
 * const isSupported = LANGUAGES.some(lang => lang.locale === 'fr')
 * ```
 *
 * @example
 * ```ts
 * // Find a language by locale
 * const french = LANGUAGES.find(lang => lang.locale === 'fr')
 * console.log(french?.label) // "Français"
 *
 * // Get all available locales
 * const locales = LANGUAGES.map(lang => lang.locale)
 * ```
 *
 * @public
 */
export const LANGUAGES = [
	{ locale: 'id', label: 'Bahasa Indonesia' },
	{ locale: 'ms', label: 'Bahasa Melayu' },
	{ locale: 'ca', label: 'Català' },
	{ locale: 'cs', label: 'Čeština' },
	{ locale: 'da', label: 'Danish' },
	{ locale: 'de', label: 'Deutsch' },
	{ locale: 'en', label: 'English' },
	{ locale: 'es', label: 'Español' },
	{ locale: 'tl', label: 'Filipino' },
	{ locale: 'fr', label: 'Français' },
	{ locale: 'gl', label: 'Galego' },
	{ locale: 'hr', label: 'Hrvatski' },
	{ locale: 'it', label: 'Italiano' },
	{ locale: 'hu', label: 'Magyar' },
	{ locale: 'nl', label: 'Nederlands' },
	{ locale: 'no', label: 'Norwegian' },
	{ locale: 'pl', label: 'Polski' },
	{ locale: 'pt-br', label: 'Português - Brasil' },
	{ locale: 'pt-pt', label: 'Português - Europeu' },
	{ locale: 'ro', label: 'Română' },
	{ locale: 'sl', label: 'Slovenščina' },
	{ locale: 'so', label: 'Somali' },
	{ locale: 'fi', label: 'Suomi' },
	{ locale: 'sv', label: 'Svenska' },
	{ locale: 'vi', label: 'Tiếng Việt' },
	{ locale: 'tr', label: 'Türkçe' },
	{ locale: 'el', label: 'Ελληνικά' },
	{ locale: 'ru', label: 'Русский' },
	{ locale: 'uk', label: 'Українська' },
	{ locale: 'he', label: 'עברית' },
	{ locale: 'ur', label: 'اردو' },
	{ locale: 'ar', label: 'عربي' },
	{ locale: 'fa', label: 'فارسی' },
	{ locale: 'ne', label: 'नेपाली' },
	{ locale: 'mr', label: 'मराठी' },
	{ locale: 'hi-in', label: 'हिन्दी' },
	{ locale: 'bn', label: 'বাংলা' },
	{ locale: 'pa', label: 'ਪੰਜਾਬੀ' },
	{ locale: 'gu-in', label: 'ગુજરાતી' },
	{ locale: 'ta', label: 'தமிழ்' },
	{ locale: 'te', label: 'తెలుగు' },
	{ locale: 'kn', label: 'ಕನ್ನಡ' },
	{ locale: 'ml', label: 'മലയാളം' },
	{ locale: 'th', label: 'ภาษาไทย' },
	{ locale: 'km-kh', label: 'ភាសាខ្មែរ' },
	{ locale: 'ko-kr', label: '한국어' },
	{ locale: 'ja', label: '日本語' },
	{ locale: 'zh-cn', label: '简体中文' },
	{ locale: 'zh-tw', label: '繁體中文 (台灣)' },
] as const
